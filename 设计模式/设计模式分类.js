/*
    创建设计模式：工厂、单例、建造者 原型
    结构化设计模式：外观、适配器、代理、装饰器、享元桥接、组合
    行为型：策略、模板方法、观察者、迭代器、责任链、命令、备忘录、状态、访问者、终结者、解释器
    设计模式的6大原则
      1.单一职责原则SRP：一个类只负责一个功能领域的相应职责，即就一个类而言，应该只有一个引起它变化的原因。
      2.开闭原则OCP：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。
      3.里氏替换原则LSP：所有引用父类的地方必须能透明地使用其子类的对象。
      4.依赖倒置原则DIP：抽象不应该依赖于细节，细节应当依赖于抽象，要针对接口编程，而不是针对实现编程。
      5.接口隔离原则ISP：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。
      6.迪米特法则LoD：一个软件实体应当尽可能少地与其他实体发生相互作用。
*/
